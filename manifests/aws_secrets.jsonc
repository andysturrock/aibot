{
    "slackSigningSecret": "abc123",
    "aiBotUrl": "https://aibot.example.com/0_0_1",
    "slackBotToken": "xoxb-xxx",
    "slackClientId": "number.number",
    "slackClientSecret": "alphanum",
    "gcpProjectId": "alpha-num",
    "botName": "AIBot",
    "gcpLocation": "europe-west2",
    "gcpMultiRegion": "eu",
    "gcpDataStoreIds": "alphanum",
    "documentBucketName": "alphanum",
    "handleFilesModel": "gemini-1.5-flash-001",
    "customSearchGroundedModel": "gemini-1.5-pro-001",
    "slackSummaryModel": "gemini-1.5-flash-001",
    "googleSearchGroundedModel": "gemini-1.5-flash-001",
    "supervisorAgentModel": "gemini-1.5-pro-001",
    "slackSearchModel": "gemini-1.5-pro-001",
    // The client_id should match the one above.
    // You can get the value for this from the "Manage distribution" section of the app settings webpage.
    "authUrl": "https://slack.com/oauth/v2/authorize?client_id=num.num&scope=app_mentions:read,channels:history,chat:write,files:read,groups:history,im:history,im:read,im:write,mpim:history,reactions:read,reactions:write,remote_files:read,users:read,users:read.email,files:write&user_scope=channels:history,files:read,groups:history,im:history,mpim:history,search:read,files:write",
    // Id of this bot and other bots to stop them talking to each other
    "ignoreMessagesFromTheseIds": "UABC123,UXYZ456",
    // Id for a user which is used to pull messages from public channels which the bot is not a member of.
    // Best to create a "service account" rather than use a token from a real user.
    "slackUserToken": "xoxp-xxx"
}